name: Deploy

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      CI: true
      HEADLESS: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements-ci.txt') }}

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-pw-${{ hashFiles('requirements.txt', 'requirements-ci.txt') }}

      - name: Install dependencies
        run: |
          pip install -r requirements.txt -r requirements-ci.txt

      - name: Run scraper integration tests
        run: bash scripts/run_ci_tests.sh

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: npm ci
        working-directory: frontend

      - name: Build frontend
        run: npm --prefix frontend run build

      - name: Upload frontend to MyDevil
        env:
          MYDEVIL_USER: ${{ secrets.MYDEVIL_USER }}
          MYDEVIL_HOST: ${{ secrets.MYDEVIL_HOST }}
          MYDEVIL_PATH: ${{ secrets.MYDEVIL_PATH }}
          MYDEVIL_SSH_KEY: ${{ secrets.MYDEVIL_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$MYDEVIL_SSH_KEY" > ~/.ssh/mydevil_key
          chmod 600 ~/.ssh/mydevil_key
          rsync -av -e "ssh -i ~/.ssh/mydevil_key -o StrictHostKeyChecking=no" frontend/dist/ "$MYDEVIL_USER@$MYDEVIL_HOST:$MYDEVIL_PATH"

      - name: Log in to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.REGISTRY }}/backend:latest

      - name: Build and push scraper image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: scraper/Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY }}/scraper:latest

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Push to deployment repository
        run: |
          git remote add deploy ${{ secrets.DEPLOY_REPO }}
          git push deploy main
